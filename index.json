{
  "api/OmiyaGames.Global.ComponentSingleton-1.html": {
    "href": "api/OmiyaGames.Global.ComponentSingleton-1.html",
    "title": "Class ComponentSingleton<T> | Global documentation",
    "keywords": "Class ComponentSingleton<T> Inheritance Object ComponentSingleton<T> Namespace : OmiyaGames.Global Assembly : cs.temp.dll.dll Syntax public static class ComponentSingleton<T> where T : Component Type Parameters Name Description T Methods Get() Instance of the required component type. Declaration public static T Get() Returns Type Description T Instance of the required component type. Remarks If this method creates a new , it will be deactivated by default with hideFlags set to . Get(HideFlags) Instance of the required component type. Declaration public static T Get(HideFlags flags) Parameters Type Name Description HideFlags flags If first time creating this singleton, this flag determines what condition the associated will be in. Returns Type Description T Instance of the required component type. Remarks If this method creates a new , it will be deactivated by default. Get(HideFlags, Boolean) Instance of the required component type. Declaration public static T Get(HideFlags flags, bool isActive) Parameters Type Name Description HideFlags flags If first time creating this singleton, this flag determines what condition the associated will be in. Boolean isActive If first time creating this singleton, this boolean determines whether the associated will be active as well. Returns Type Description T Instance of the required component type. Get(HideFlags, Boolean, out Boolean) Instance of the required component type. Declaration public static T Get(HideFlags flags, bool isActive, out bool isFirstTimeCreated) Parameters Type Name Description HideFlags flags If first time creating this singleton, this flag determines what condition the associated will be in. Boolean isActive If first time creating this singleton, this boolean determines whether the associated will be active as well. Boolean isFirstTimeCreated True if this is the call that creates the first instance of this singleton; false, otherwise (which is most of the time.) Returns Type Description T Instance of the required component type. Get(HideFlags, out Boolean) Instance of the required component type. Declaration public static T Get(HideFlags flags, out bool isFirstTimeCreated) Parameters Type Name Description HideFlags flags If first time creating this singleton, this flag determines what condition the associated will be in. Boolean isFirstTimeCreated True if this is the call that creates the first instance of this singleton; false, otherwise (which is most of the time.) Returns Type Description T Instance of the required component type. Remarks If this method creates a new , it will be deactivated by default. Get(Boolean) Instance of the required component type. Declaration public static T Get(bool isActive) Parameters Type Name Description Boolean isActive If first time creating this singleton, this boolean determines whether the associated will be active as well. Returns Type Description T Instance of the required component type. Remarks If this method creates a new , the hideFlags will be set to . Get(Boolean, HideFlags) Instance of the required component type. Declaration public static T Get(bool isActive, HideFlags flags) Parameters Type Name Description Boolean isActive If first time creating this singleton, this boolean determines whether the associated will be active as well. HideFlags flags If first time creating this singleton, this flag determines what condition the associated will be in. Returns Type Description T Instance of the required component type. Get(Boolean, HideFlags, out Boolean) Instance of the required component type. Declaration public static T Get(bool isActive, HideFlags flags, out bool isFirstTimeCreated) Parameters Type Name Description Boolean isActive If first time creating this singleton, this boolean determines whether the associated will be active as well. HideFlags flags If first time creating this singleton, this flag determines what condition the associated will be in. Boolean isFirstTimeCreated True if this is the call that creates the first instance of this singleton; false, otherwise (which is most of the time.) Returns Type Description T Instance of the required component type. Get(Boolean, out Boolean) Instance of the required component type. Declaration public static T Get(bool isActive, out bool isFirstTimeCreated) Parameters Type Name Description Boolean isActive If first time creating this singleton, this boolean determines whether the associated will be active as well. Boolean isFirstTimeCreated True if this is the call that creates the first instance of this singleton; false, otherwise (which is most of the time.) Returns Type Description T Instance of the required component type. Remarks If this method creates a new , the hideFlags will be set to . Get(out Boolean) Instance of the required component type. Declaration public static T Get(out bool isFirstTimeCreated) Parameters Type Name Description Boolean isFirstTimeCreated True if this is the call that creates the first instance of this singleton; false, otherwise (which is most of the time.) Returns Type Description T Instance of the required component type. Remarks If this method creates a new , it will be deactivated by default with hideFlags set to . Release() Destroys this singleton and all components attached to it. Declaration public static bool Release() Returns Type Description Boolean"
  },
  "api/OmiyaGames.Global.Editor.html": {
    "href": "api/OmiyaGames.Global.Editor.html",
    "title": "Namespace OmiyaGames.Global.Editor | Global documentation",
    "keywords": "Namespace OmiyaGames.Global.Editor Classes SettingsEditor Editor for used as project settings. Appears under inspector when selecting the asset. SettingsHelpers Helper methods for setting up settings. SettingsPropertyDrawer"
  },
  "api/OmiyaGames.Global.Editor.SettingsEditor.html": {
    "href": "api/OmiyaGames.Global.Editor.SettingsEditor.html",
    "title": "Class SettingsEditor | Global documentation",
    "keywords": "Class SettingsEditor Editor for used as project settings. Appears under inspector when selecting the asset. Inheritance Object SettingsEditor Namespace : OmiyaGames.Global.Editor Assembly : cs.temp.dll.dll Syntax public abstract class SettingsEditor : UnityEditor.Editor Remarks The MIT License (MIT) Copyright (c) 2020-2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 1.2.0 Date: 2/4/2022 Author: Taro Omiya Version: 1.3.0 Date: 2/19/2022 Author: Taro Omiya Initial verison. Adding UxmlPath and CreateInspectorGUI() to allow customizing this editor a little better. Fields HelpInfo Declaration public const string HelpInfo = \"This is a project settings asset that can be edited in the Project Settings window. Please do not move or delete it from the project. If using a version control tool, remember to add this asset into the repo.\" Field Value Type Description String Properties RootElement The visual element to display Declaration protected VisualElement RootElement { get; set; } Property Value Type Description VisualElement Remarks Override to replace this property and/or CreateInspectorGUI() to customize the editor to your liking. SidebarDisplayPath The name this settings will appear in the Project Setting's left-sidebar. Declaration public abstract string SidebarDisplayPath { get; } Property Value Type Description String UxmlPath The path to the UXML file for this editor. Returns null if one isn't intended to be displayed. Declaration public virtual string UxmlPath { get; } Property Value Type Description String Methods CreateInspectorGUI() Declaration public override VisualElement CreateInspectorGUI() Returns Type Description VisualElement OnInspectorGUI() Draws a message and a button prompting user to open Project Settings window. Declaration public override void OnInspectorGUI()"
  },
  "api/OmiyaGames.Global.Editor.SettingsHelpers.html": {
    "href": "api/OmiyaGames.Global.Editor.SettingsHelpers.html",
    "title": "Class SettingsHelpers | Global documentation",
    "keywords": "Class SettingsHelpers Helper methods for setting up settings. Inheritance Object SettingsHelpers Namespace : OmiyaGames.Global.Editor Assembly : cs.temp.dll.dll Syntax public static class SettingsHelpers Remarks The MIT License (MIT) Copyright (c) 2020 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-preview.1 Date: 6/29/2020 Author: Taro Omiya Initial verison. Fields SettingsDirectory Common directory to retrieve settings. Declaration public const string SettingsDirectory = \"Assets/Omiya Games/Settings/\" Field Value Type Description String Methods CreateOmiyaGamesSettings<SETTINGS>(String) Declaration public static SETTINGS CreateOmiyaGamesSettings<SETTINGS>(string fileName) where SETTINGS : ScriptableObject Parameters Type Name Description String fileName Returns Type Description SETTINGS Type Parameters Name Description SETTINGS GetFullOmiyaGamesSettingsPath(String) Declaration public static string GetFullOmiyaGamesSettingsPath(string fileName) Parameters Type Name Description String fileName Returns Type Description String GetOmiyaGamesSettings<SETTINGS>(String) Declaration public static SETTINGS GetOmiyaGamesSettings<SETTINGS>(string fileName) where SETTINGS : ScriptableObject Parameters Type Name Description String fileName Returns Type Description SETTINGS Type Parameters Name Description SETTINGS"
  },
  "api/OmiyaGames.Global.Editor.SettingsPropertyDrawer.html": {
    "href": "api/OmiyaGames.Global.Editor.SettingsPropertyDrawer.html",
    "title": "Class SettingsPropertyDrawer | Global documentation",
    "keywords": "Class SettingsPropertyDrawer Inheritance Object SettingsPropertyDrawer Namespace : OmiyaGames.Global.Editor Assembly : cs.temp.dll.dll Syntax public abstract class SettingsPropertyDrawer : PropertyDrawer Fields EditButtonWidth Declaration public const float EditButtonWidth = 50F Field Value Type Description Single HorizontalMargin Declaration public const float HorizontalMargin = default(float) Field Value Type Description Single ResetButtonWidth Declaration public const float ResetButtonWidth = 50F Field Value Type Description Single Properties SidebarDisplayPath The name this settings will appear in the Project Setting's left-sidebar. Declaration public abstract string SidebarDisplayPath { get; } Property Value Type Description String Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Reset(SerializedProperty) Sets the property to the current settings Declaration public abstract void Reset(SerializedProperty property) Parameters Type Name Description SerializedProperty property The property to update."
  },
  "api/OmiyaGames.Global.html": {
    "href": "api/OmiyaGames.Global.html",
    "title": "Namespace OmiyaGames.Global | Global documentation",
    "keywords": "Namespace OmiyaGames.Global Classes ComponentSingleton<T> ISingletonScript An abstract class with functions that are called on certain Singleton 's events. Singleton Manager Helper manager to start coroutines and/or listen to Unity's update events. Useful for runtime scripts that doesn't extend , e.g. s. Note that Unity events needs to be manually started by calling StartEvents() once. Manager.TimeArgs Arguments to pass each event call. Singleton Any GameObject with this script will not be destroyed when switching between scenes. However, only one instance of this script may exist in a scene. Allows retrieving any components in itself or its children. ISingletonScript Enums Singleton.GenuineStatus Status of this build, based on and . Delegates Manager.EachFrame Singleton.FocusChanged Indicates how IsAppFocused changes."
  },
  "api/OmiyaGames.Global.ISingletonScript.html": {
    "href": "api/OmiyaGames.Global.ISingletonScript.html",
    "title": "Class ISingletonScript | Global documentation",
    "keywords": "Class ISingletonScript An abstract class with functions that are called on certain Singleton 's events. Singleton Inheritance Object ISingletonScript Namespace : OmiyaGames.Global Assembly : cs.temp.dll.dll Syntax public abstract class ISingletonScript : MonoBehaviour Remarks The MIT License (MIT) Copyright (c) 2014-2020 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.0.0-preview.1 Date: 5/18/2015 Author: Taro Omiya Initial verison. Version: 0.1.0-preview.1 Date: 5/18/2020 Author: Taro Omiya Converting code to package. Properties IsPartOfSingleton Indicates whether this instance can retrievable from Singleton or not. Declaration public bool IsPartOfSingleton { get; } Property Value Type Description Boolean Set to true if this script is attached to a on or a child of Singleton See Also Singleton Methods SceneAwake() Runs when, after a scene transition, Awake() is called. This method is called directly after SingletonAwake() as well. Declaration public abstract void SceneAwake() SingletonAwake() Runs when the Instance calls Awake(). Declaration public abstract void SingletonAwake()"
  },
  "api/OmiyaGames.Global.Manager.EachFrame.html": {
    "href": "api/OmiyaGames.Global.Manager.EachFrame.html",
    "title": "Delegate Manager.EachFrame | Global documentation",
    "keywords": "Delegate Manager.EachFrame Namespace : OmiyaGames.Global Assembly : cs.temp.dll.dll Syntax public delegate void EachFrame(Manager.TimeArgs args); Parameters Type Name Description Manager.TimeArgs args"
  },
  "api/OmiyaGames.Global.Manager.html": {
    "href": "api/OmiyaGames.Global.Manager.html",
    "title": "Class Manager | Global documentation",
    "keywords": "Class Manager Helper manager to start coroutines and/or listen to Unity's update events. Useful for runtime scripts that doesn't extend , e.g. s. Note that Unity events needs to be manually started by calling StartEvents() once. Inheritance Object Manager Namespace : OmiyaGames.Global Assembly : cs.temp.dll.dll Syntax public static class Manager Remarks The MIT License (MIT) Copyright (c) 2014-2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 1.4.0 Date: 2/27/2022 Author: Taro Omiya Initial verison. Methods StartCoroutine(IEnumerator) Starts a coroutine. Useful runtime function if calling from a non-MonoBehavior, or a deactivated one. Declaration public static Coroutine StartCoroutine(IEnumerator coroutine) Parameters Type Name Description IEnumerator coroutine The enumerator to generate a coroutine from. Returns Type Description Coroutine The started coroutine. See Also StopCoroutine(Coroutine) StartEvents() Starts OnUpdate , OnLateUpdate , and OnFixedUpdate if they weren't running already. Declaration public static void StartEvents() StopAllCoroutine() Stops all coroutines running on Manager. Declaration public static void StopAllCoroutine() StopCoroutine(Coroutine) Stops a coroutine. Useful runtime function if calling from a non-MonoBehavior, or a deactivated one. Declaration public static void StopCoroutine(Coroutine coroutine) Parameters Type Name Description Coroutine coroutine Coroutine to stop. See Also StartCoroutine(IEnumerator) Events OnFixedUpdate Triggered every physics update. Declaration public static event Manager.EachFrame OnFixedUpdate Event Type Type Description Manager.EachFrame OnLateUpdate Triggers each frame, after OnUpdate is finished calling. Declaration public static event Manager.EachFrame OnLateUpdate Event Type Type Description Manager.EachFrame OnUpdate Triggers each frame. Declaration public static event Manager.EachFrame OnUpdate Event Type Type Description Manager.EachFrame"
  },
  "api/OmiyaGames.Global.Manager.TimeArgs.html": {
    "href": "api/OmiyaGames.Global.Manager.TimeArgs.html",
    "title": "Class Manager.TimeArgs | Global documentation",
    "keywords": "Class Manager.TimeArgs Arguments to pass each event call. Inheritance Object EventArgs Manager.TimeArgs Namespace : OmiyaGames.Global Assembly : cs.temp.dll.dll Syntax public class TimeArgs : EventArgs Properties DeltaTimeScaled Seconds between each call, affected by . Declaration public float DeltaTimeScaled { get; } Property Value Type Description Single DeltaTimeUnscaled Seconds between each call, unaffected by . Declaration public float DeltaTimeUnscaled { get; } Property Value Type Description Single TimeSinceStartScaled Seconds that has passed since start of game, affected by . Declaration public float TimeSinceStartScaled { get; } Property Value Type Description Single TimeSinceStartUnscaled Seconds that has passed since start of game, unaffected by . Declaration public float TimeSinceStartUnscaled { get; } Property Value Type Description Single"
  },
  "api/OmiyaGames.Global.Singleton.FocusChanged.html": {
    "href": "api/OmiyaGames.Global.Singleton.FocusChanged.html",
    "title": "Delegate Singleton.FocusChanged | Global documentation",
    "keywords": "Delegate Singleton.FocusChanged Indicates how IsAppFocused changes. Namespace : OmiyaGames.Global Assembly : cs.temp.dll.dll Syntax public delegate void FocusChanged(bool before, bool after); Parameters Type Name Description Boolean before Boolean after"
  },
  "api/OmiyaGames.Global.Singleton.GenuineStatus.html": {
    "href": "api/OmiyaGames.Global.Singleton.GenuineStatus.html",
    "title": "Enum Singleton.GenuineStatus | Global documentation",
    "keywords": "Enum Singleton.GenuineStatus Status of this build, based on and . Namespace : OmiyaGames.Global Assembly : cs.temp.dll.dll Syntax public enum GenuineStatus : short Fields Name Description IsGenuine According to Unity, build is genuine. Same as returning true. NotGenuine According to Unity, build is not genuine. Same as returning false. Unchecked Verification for whether this build is genuine or not has been executed yet. VerificationNotSupported Unity has no ability to confim whether this build is genuine or not. Same as returning false."
  },
  "api/OmiyaGames.Global.Singleton.html": {
    "href": "api/OmiyaGames.Global.Singleton.html",
    "title": "Class Singleton | Global documentation",
    "keywords": "Class Singleton Any GameObject with this script will not be destroyed when switching between scenes. However, only one instance of this script may exist in a scene. Allows retrieving any components in itself or its children. ISingletonScript Inheritance Object Singleton Namespace : OmiyaGames.Global Assembly : cs.temp.dll.dll Syntax public class Singleton : MonoBehaviour Remarks The MIT License (MIT) Copyright (c) 2014-2020 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Date: 9/22/2016 Author: Taro Omiya Initial verison. Version: 0.1.0-preview.1 Date: 5/18/2020 Author: Taro Omiya Converting code to package. Version: 0.1.1-preview.1 Date: 6/29/2020 Author: Taro Omiya Updating code to compile with the latest version of Common and Web package. Properties CheckGenuine Gets whether this build is genuine or not, through Unity's methods. Declaration public Singleton.GenuineStatus CheckGenuine { get; } Property Value Type Description Singleton.GenuineStatus Instance The static instance of this object. Use this property to access it's information Declaration public static Singleton Instance { get; } Property Value Type Description Singleton IsAppFocused State indicating whether this app is focused (e.g. on WebGL, the app is capturing the mouse input properly) on this app or not. Declaration public bool IsAppFocused { get; } Property Value Type Description Boolean IsSimulatingMalformedGame Indicates whether the developer wants to pretend this build is not genuine. Declaration public bool IsSimulatingMalformedGame { get; } Property Value Type Description Boolean IsWebApp Indicates if this build is a web app or not. Basically checks if this is a WebGL build. Declaration public bool IsWebApp { get; } Property Value Type Description Boolean PlatformSpecificStoreLink Gets the listing of this game on a store most relevant to this build's platform. Declaration public string PlatformSpecificStoreLink { get; } Property Value Type Description String PlatformSpecificStoreLinkShortened Gets the slightly shortened listing of this game on a store most relevant to this build's platform. Declaration public string PlatformSpecificStoreLinkShortened { get; } Property Value Type Description String See Also PlatformSpecificStoreLink WebsiteLink Gets the link to this game's website. Declaration public string WebsiteLink { get; } Property Value Type Description String WebsiteLinkShortened Gets the link to this game's website, shortened. Declaration public string WebsiteLinkShortened { get; } Property Value Type Description String See Also WebsiteLink Methods Get<COMPONENT>() Retrieves a under Singleton 's , or its children. Declaration public static COMPONENT Get<COMPONENT>() where COMPONENT : Component Returns Type Description COMPONENT Type Parameters Name Description COMPONENT Remarks For efficiency, s retrieved from prior calls are cached. GetStoreLink(PlatformSpecificLink.SupportedPlatforms) Gets the listing of this game on a store most relevant to platform . Declaration public string GetStoreLink(PlatformSpecificLink.SupportedPlatforms platform) Parameters Type Name Description PlatformSpecificLink.SupportedPlatforms platform Returns Type Description String Events OnAfterFocusChange Called on Unity's event, OnApplicationFocus(bool), and after IsAppFocused changes. Declaration public event Action<bool> OnAfterFocusChange Event Type Type Description Action < Boolean > OnBeforeFocusChange Called on Unity's event, OnApplicationFocus(bool), and before IsAppFocused changes. Declaration public event Singleton.FocusChanged OnBeforeFocusChange Event Type Type Description Singleton.FocusChanged OnFixedUpdate Called on Unity's event, OnFixedUpdate(). May slightly improve performance than simply defining the method. Argument is . Declaration public event Action<float> OnFixedUpdate Event Type Type Description Action < Single > OnLateRealTimeUpdate Called on Unity's event, OnLateUpdate(). May slightly improve performance than simply defining the method. Argument is . Declaration public event Action<float> OnLateRealTimeUpdate Event Type Type Description Action < Single > OnLateUpdate Called on Unity's event, OnLateUpdate(). May slightly improve performance than simply defining the method. Argument is . Declaration public event Action<float> OnLateUpdate Event Type Type Description Action < Single > OnRealTimeUpdate Called on Unity's event, OnUpdate(). May slightly improve performance than simply defining the method. Argument is . Declaration public event Action<float> OnRealTimeUpdate Event Type Type Description Action < Single > OnUpdate Called on Unity's event, OnUpdate(). May slightly improve performance than simply defining the method. Argument is . Declaration public event Action<float> OnUpdate Event Type Type Description Action < Single >"
  },
  "index.html": {
    "href": "index.html",
    "title": "Omiya Games - Global | Global documentation",
    "keywords": "Omiya Games - Global A set of libraries Omiya Games uses to add larger-scoped features and activities, e.g. GameObjects that persists between scene transitions. Install There are two common methods for installing this package. Through Unity Package Manager Unity's own Package Manager supports importing packages through a URL to a Git repo : First, on this repository page, click the \"Clone or download\" button, and copy over this repository's HTTPS URL. Then click on the + button on the upper-left-hand corner of the Package Manager, select \"Add package from git URL...\" on the context menu, then paste this repo's URL! While easy and straightforward, this method has a few major downside: it does not support dependency resolution and package upgrading when a new version is released. To add support for that, the following method is recommended: Through OpenUPM Installing via OpenUPM's command line tool is recommended because it supports dependency resolution, upgrading, and downgrading this package. If you haven't already installed OpenUPM , you can do so through Node.js's npm (obviously have Node.js installed in your system first): npm install -g openupm-cli Then, to install this package, just run the following command at the root of your Unity project: openupm add com.omiyagames.global Resources Documentation Change Log LICENSE Overall package is licensed under MIT , unless otherwise noted in the 3rd party licenses file and/or source code. Copyright (c) 2019-2022 Omiya Games"
  },
  "manual/changelog.html": {
    "href": "manual/changelog.html",
    "title": "Change Log: | Global documentation",
    "keywords": "Change Log: 1.4.1 Bug Fix: fix namespace and compilation error in Manager . 1.4.0 New Feature: added static helper class, Manager : handles starting and stopping coroutines for any non- MonoBehaviour scripts. Also has events for Update , LateUpdate , and FixedUpdate . 1.3.0 New Enhancement: allowing one to edit SettingsEditor by overriding the UxmlPath property. 1.2.0 New Feature: added abstract class, SettingsEditor . This editor simply displays one button, prompting the user to open the Project Settings window instead. New Feature: added abstract class, SettingsPropertyDrawer This PropertyDrawer automatically calls Reset(SerializedProperty) as soon as the user sees the serialized variable in the inspector. Provides an opportunity for the developer to replace the variable with an existing asset in the project. Bug Fix: fixed ComponentSingleton to actually work on runtime. 1.1.0 New Feature: added ComponentSingleton , which creates a singleton instance of a component! 1.0.0 Marking this package as stable, given it's relatively small footprint and unlikeliness to cause problems. 0.1.2-preview.2 New Enhancement: upgrading the assembly definitions and package files. 0.1.2-preview.1 New Enhancement: added SettingsHelpers 0.1.1-preview.1 Updating version of each dependency libraries. Updating Singleton to compile with latest dependency changes. 0.1.0-preview.1 Initial release New Feature: added Singleton New Feature: added ISingletonScript"
  },
  "manual/README.html": {
    "href": "manual/README.html",
    "title": "| Global documentation",
    "keywords": "This folder contains markdown files listed under \"Manual\" section in the documentation. When adding or removing any files in this folder, don't forget to update toc.yml accordingly!"
  }
}